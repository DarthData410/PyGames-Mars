import enum

# Game Constants:
WIDTH=1280	
HEIGHT=768
FPS=30
TILESIZE=32

# In Game Constants:
INIT_LASTSAMPLE='n/a'
COL_HORIZ='HorizontalCollide'
COL_VERT='VerticalCollide'
MINE_CHOICES=['NONE','Zinc','NONE','Gold','NONE','Silver']

#Game Images / Image Library(dict()):
NOKEY='-1'
BACKGROUND='./graphics/background.png'
BGKEY='[&BACK]'
BLANK='./graphics/blocked_blank32.png'
BLANK_KEY='x'

PLAYER_DEFAULT='./graphics/rover_64_idle.png'
PLAYER_KEY='p'
ROCK='./graphics/rock_one_64_a.png'
ROCK_KEY='r'
BOULDER='./graphics/boulder_32.png'
BOULDER_KEY='b'

# Image Library / Init unbound function:
imglib=dict()
def initimages():
    imglib[PLAYER_KEY]=PLAYER_DEFAULT
    imglib[ROCK_KEY]=ROCK
    imglib[BOULDER_KEY]=BOULDER
    imglib[BLANK_KEY]=BLANK
    imglib[BGKEY]=BACKGROUND

# Game World Map Array:
MAP=[
['x','x','x','x','x','x','x','x','x','x','x','x','x','x','x','x','x','x','x','x','x','x','x','x','x','x','x','x','x','x','x','x','x','x','x','x','x','x','x','x'],
['x','-1','-1','-1','b','-1','-1','-1','-1','-1','-1','-1','-1','-1','-1','-1','-1','x','x','x','x','x','-1','-1','-1','-1','-1','-1','-1','-1','-1','-1','-1','-1','-1','-1','-1','-1','-1','x'],
['x','-1','-1','-1','-1','-1','-1','-1','-1','-1','-1','-1','-1','-1','-1','-1','-1','-1','x','x','x','x','b','-1','-1','-1','-1','-1','-1','-1','-1','-1','-1','-1','-1','-1','-1','-1','-1','x'],
['x','-1','-1','-1','b','-1','-1','-1','-1','-1','-1','-1','-1','-1','-1','-1','-1','-1','x','x','-1','-1','-1','-1','-1','-1','-1','-1','-1','-1','-1','-1','-1','-1','-1','-1','-1','-1','-1','x'],
['x','-1','-1','-1','-1','-1','-1','-1','-1','-1','-1','-1','-1','-1','-1','-1','-1','b','-1','x','-1','-1','-1','-1','-1','-1','-1','-1','-1','-1','-1','-1','-1','-1','-1','-1','-1','-1','-1','x'],
['x','-1','b','-1','-1','-1','-1','-1','-1','-1','-1','-1','-1','-1','-1','-1','-1','-1','-1','x','-1','b','-1','-1','-1','-1','-1','-1','-1','-1','-1','-1','-1','-1','-1','-1','-1','-1','-1','x'],
['x','-1','-1','-1','-1','-1','-1','-1','-1','-1','-1','-1','-1','-1','-1','-1','-1','-1','-1','-1','-1','-1','-1','-1','-1','-1','-1','-1','-1','-1','-1','-1','-1','-1','-1','-1','-1','-1','-1','x'],
['x','-1','-1','-1','-1','-1','-1','-1','-1','-1','-1','-1','-1','-1','-1','-1','-1','-1','-1','-1','-1','-1','-1','-1','-1','-1','-1','-1','-1','-1','-1','-1','-1','-1','-1','-1','-1','-1','-1','x'],
['x','-1','-1','-1','-1','-1','-1','-1','-1','-1','-1','-1','-1','-1','-1','-1','-1','-1','-1','-1','p','-1','-1','-1','-1','-1','-1','-1','-1','-1','-1','-1','-1','-1','-1','-1','-1','-1','-1','x'],
['x','-1','-1','-1','-1','-1','-1','r','-1','-1','-1','-1','-1','-1','-1','-1','-1','-1','-1','-1','-1','-1','-1','-1','-1','-1','-1','-1','-1','-1','-1','-1','-1','-1','-1','-1','-1','-1','-1','x'],
['x','-1','-1','-1','-1','-1','-1','-1','-1','-1','-1','-1','-1','-1','-1','-1','-1','-1','-1','-1','-1','-1','-1','-1','-1','-1','-1','-1','-1','-1','-1','-1','-1','-1','-1','-1','-1','-1','-1','x'],
['x','-1','-1','-1','-1','-1','-1','-1','-1','r','-1','-1','-1','-1','-1','-1','-1','-1','-1','-1','-1','-1','-1','-1','-1','-1','-1','-1','-1','-1','-1','-1','-1','-1','-1','b','-1','-1','-1','x'],
['x','-1','-1','-1','-1','-1','-1','-1','-1','-1','-1','-1','-1','-1','-1','-1','-1','-1','-1','-1','-1','-1','-1','-1','-1','-1','-1','-1','-1','-1','-1','-1','-1','-1','-1','-1','-1','-1','-1','x'],
['x','-1','-1','-1','-1','-1','-1','-1','r','-1','-1','-1','-1','-1','-1','-1','-1','-1','-1','b','-1','-1','-1','-1','-1','-1','-1','-1','-1','-1','r','-1','-1','-1','-1','-1','-1','-1','-1','x'],
['x','-1','-1','-1','-1','-1','-1','-1','-1','-1','-1','-1','-1','-1','-1','-1','b','-1','-1','-1','-1','-1','-1','-1','-1','-1','-1','-1','-1','-1','-1','-1','-1','-1','-1','-1','-1','-1','-1','x'],
['x','-1','-1','-1','-1','-1','-1','-1','-1','-1','-1','-1','-1','-1','-1','-1','-1','-1','-1','-1','-1','-1','-1','-1','-1','-1','-1','-1','-1','-1','-1','-1','-1','-1','-1','-1','-1','-1','-1','x'],
['x','-1','-1','-1','-1','-1','-1','-1','-1','-1','-1','-1','-1','-1','-1','b','-1','b','-1','-1','-1','-1','-1','-1','-1','-1','-1','-1','-1','-1','-1','-1','-1','r','-1','-1','-1','-1','-1','x'],
['x','-1','-1','-1','-1','-1','-1','-1','-1','-1','-1','-1','-1','-1','-1','-1','-1','-1','-1','-1','-1','-1','-1','-1','-1','-1','-1','-1','-1','-1','-1','-1','-1','-1','-1','-1','-1','-1','-1','x'],
['x','-1','-1','-1','-1','-1','-1','-1','-1','-1','-1','-1','-1','-1','-1','-1','-1','-1','-1','-1','-1','-1','-1','-1','-1','-1','-1','-1','-1','-1','-1','-1','-1','-1','-1','-1','-1','-1','-1','x'],
['x','-1','-1','-1','-1','-1','-1','-1','-1','-1','-1','-1','-1','-1','-1','-1','-1','-1','-1','-1','-1','-1','-1','-1','-1','-1','-1','-1','-1','-1','-1','-1','-1','-1','-1','-1','-1','-1','-1','x'],
['x','-1','-1','r','-1','-1','-1','-1','-1','-1','-1','-1','-1','-1','-1','-1','-1','-1','-1','-1','-1','-1','-1','-1','-1','-1','-1','-1','-1','-1','-1','-1','-1','-1','-1','-1','-1','-1','-1','x'],
['x','-1','-1','-1','-1','-1','-1','-1','-1','-1','-1','-1','-1','-1','-1','-1','-1','-1','-1','-1','-1','-1','-1','-1','-1','-1','-1','-1','-1','-1','-1','-1','-1','-1','-1','-1','-1','-1','-1','x'],
['x','-1','-1','-1','-1','-1','-1','-1','-1','-1','-1','-1','-1','-1','-1','-1','-1','-1','-1','-1','-1','-1','-1','-1','-1','-1','-1','-1','-1','-1','-1','-1','-1','-1','-1','-1','-1','-1','b','x'],
['x','-1','-1','-1','-1','-1','-1','-1','-1','-1','-1','-1','-1','-1','-1','-1','-1','-1','-1','-1','-1','-1','-1','-1','-1','-1','-1','-1','-1','-1','-1','-1','-1','-1','-1','-1','-1','-1','-1','x'],
['x','x','x','x','x','x','x','x','x','x','x','x','x','x','x','x','x','x','x','x','x','x','x','x','x','x','x','x','x','x','x','x','x','x','x','x','x','x','x','x'],
]

# Game Enums
NavDirection = enum.Enum('Direction','North South East West NONE')